{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Go_React\\\\GolangReact\\\\client\\\\src\\\\TodoList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Header, Input, Button, List } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet endpoint = \"http://localhost:9000\";\nfunction TodoList() {\n  _s();\n  const [task, setTask] = useState(\"\"); // Hook for task input\n  const [items, setItems] = useState([]); // Ensure items is initialized as an array\n  const [loading, setLoading] = useState(false); // Loading state\n  const [error, setError] = useState(null); // Error state\n\n  useEffect(() => {\n    getTask(); // Fetch tasks when the component mounts\n  }, []);\n\n  // Handles input changes\n  const onChange = e => {\n    setTask(e.target.value);\n  };\n\n  // Handles form submission\n  const onSubmit = async e => {\n    e.preventDefault();\n    if (task.trim()) {\n      try {\n        setLoading(true); // Start loading\n        const response = await fetch(`${endpoint}/api/tasks`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            task\n          })\n        });\n        if (response.ok) {\n          getTask(); // Fetch updated tasks after submitting\n          setTask(\"\"); // Clear input after submission\n        }\n      } catch (error) {\n        console.error(\"Error creating task:\", error);\n        setError(\"Error creating task\"); // Set error message\n      } finally {\n        setLoading(false); // Stop loading\n      }\n    }\n  };\n\n  // Fetches existing tasks from the backend\n  const getTask = async () => {\n    try {\n      const response = await fetch(`${endpoint}/api/tasks`); // Note the plural 'tasks'\n      if (!response.ok) throw new Error(\"Network response was not ok\");\n      const data = await response.json();\n      setItems(data);\n    } catch (error) {\n      console.error(\"Error fetching tasks:\", error);\n      setError(\"Error fetching tasks\"); // Set error message\n    }\n  };\n\n  // Handles task completion\n  const completeTask = async id => {\n    try {\n      await fetch(`${endpoint}/api/tasks/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      getTask(); // Refresh tasks after completing\n    } catch (error) {\n      console.error(\"Error completing task:\", error);\n    }\n  };\n\n  // Handles task deletion\n  const deleteTask = async id => {\n    try {\n      await fetch(`${endpoint}/api/deleteTask/${id}`, {\n        method: \"DELETE\"\n      });\n      getTask(); // Refresh tasks after deletion\n    } catch (error) {\n      console.error(\"Error deleting task:\", error);\n    }\n  };\n\n  // Handles deletion of all tasks\n  const deleteAllTasks = async () => {\n    try {\n      await fetch(`${endpoint}/api/deleteAllTasks`, {\n        method: \"DELETE\"\n      });\n      getTask(); // Refresh tasks after deletion\n    } catch (error) {\n      console.error(\"Error deleting all tasks:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      as: \"h2\",\n      color: \"yellow\",\n      children: \"ToDoList\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"task\",\n          onChange: onChange,\n          value: task,\n          fluid: true,\n          placeholder: \"Create task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          color: \"yellow\",\n          disabled: loading,\n          children: [loading ? \"Adding Task...\" : \"Add Task\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }, this), \" \", /*#__PURE__*/_jsxDEV(List, {\n      divided: true,\n      relaxed: true,\n      children: [items && items.length === 0 && !loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No tasks available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 53\n      }, this), items && items.map(item => /*#__PURE__*/_jsxDEV(List.Item, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(List.Content, {\n          children: [/*#__PURE__*/_jsxDEV(List.Header, {\n            children: item.task\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => completeTask(item.id),\n            color: \"green\",\n            children: \"Complete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => deleteTask(item.id),\n            color: \"red\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: deleteAllTasks,\n      color: \"red\",\n      children: \"Delete All Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoList, \"Utv15NZBFXKm45q/kahVtscEzeE=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","useEffect","Header","Input","Button","List","jsxDEV","_jsxDEV","endpoint","TodoList","_s","task","setTask","items","setItems","loading","setLoading","error","setError","getTask","onChange","e","target","value","onSubmit","preventDefault","trim","response","fetch","method","headers","body","JSON","stringify","ok","console","Error","data","json","completeTask","id","deleteTask","deleteAllTasks","className","children","as","color","fileName","_jsxFileName","lineNumber","columnNumber","type","name","fluid","placeholder","disabled","style","divided","relaxed","length","map","item","Item","Content","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/Go_React/GolangReact/client/src/TodoList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'; \r\nimport { Header, Input, Button, List } from 'semantic-ui-react';\r\n\r\nlet endpoint = \"http://localhost:9000\"; \r\n\r\nfunction TodoList() {\r\n  const [task, setTask] = useState(\"\"); // Hook for task input\r\n  const [items, setItems] = useState([]); // Ensure items is initialized as an array\r\n  const [loading, setLoading] = useState(false); // Loading state\r\n  const [error, setError] = useState(null); // Error state\r\n\r\n  useEffect(() => {\r\n    getTask(); // Fetch tasks when the component mounts\r\n  }, []);\r\n  \r\n  // Handles input changes\r\n  const onChange = (e) => {\r\n    setTask(e.target.value);\r\n  };\r\n\r\n  // Handles form submission\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (task.trim()) {\r\n      try {\r\n        setLoading(true); // Start loading\r\n        const response = await fetch(`${endpoint}/api/tasks`, {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ task }),\r\n        });\r\n        if (response.ok) {\r\n          getTask(); // Fetch updated tasks after submitting\r\n          setTask(\"\"); // Clear input after submission\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error creating task:\", error);\r\n        setError(\"Error creating task\"); // Set error message\r\n      } finally {\r\n        setLoading(false); // Stop loading\r\n      }\r\n    }\r\n  };\r\n\r\n  // Fetches existing tasks from the backend\r\n  const getTask = async () => {\r\n    try {\r\n      const response = await fetch(`${endpoint}/api/tasks`); // Note the plural 'tasks'\r\n      if (!response.ok) throw new Error(\"Network response was not ok\");\r\n      const data = await response.json();\r\n      setItems(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching tasks:\", error);\r\n      setError(\"Error fetching tasks\"); // Set error message\r\n    }\r\n  };\r\n\r\n  // Handles task completion\r\n  const completeTask = async (id) => {\r\n    try {\r\n      await fetch(`${endpoint}/api/tasks/${id}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      getTask(); // Refresh tasks after completing\r\n    } catch (error) {\r\n      console.error(\"Error completing task:\", error);\r\n    }\r\n  };\r\n\r\n  // Handles task deletion\r\n  const deleteTask = async (id) => {\r\n    try {\r\n      await fetch(`${endpoint}/api/deleteTask/${id}`, {\r\n        method: \"DELETE\",\r\n      });\r\n      getTask(); // Refresh tasks after deletion\r\n    } catch (error) {\r\n      console.error(\"Error deleting task:\", error);\r\n    }\r\n  };\r\n\r\n  // Handles deletion of all tasks\r\n  const deleteAllTasks = async () => {\r\n    try {\r\n      await fetch(`${endpoint}/api/deleteAllTasks`, {\r\n        method: \"DELETE\",\r\n      });\r\n      getTask(); // Refresh tasks after deletion\r\n    } catch (error) {\r\n      console.error(\"Error deleting all tasks:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <Header as=\"h2\" color=\"yellow\">ToDoList</Header>\r\n\r\n      <div className=\"row\">\r\n        <form onSubmit={onSubmit}>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"task\"\r\n            onChange={onChange}\r\n            value={task}\r\n            fluid\r\n            placeholder=\"Create task\"\r\n          />\r\n          <Button type=\"submit\" color=\"yellow\" disabled={loading}>\r\n            {loading ? \"Adding Task...\" : \"Add Task\"} {/* Submit button */}\r\n          </Button>\r\n        </form>\r\n      </div>\r\n\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>} {/* Display error if any */}\r\n\r\n      <List divided relaxed>\r\n        {items && items.length === 0 && !loading && <p>No tasks available</p>}\r\n        {items && items.map((item) => (\r\n          <List.Item key={item.id}> {/* Assuming each item has a unique 'id' */}\r\n            <List.Content>\r\n              <List.Header>{item.task}</List.Header> {/* Render task name */}\r\n              <Button onClick={() => completeTask(item.id)} color=\"green\">Complete</Button>\r\n              <Button onClick={() => deleteTask(item.id)} color=\"red\">Delete</Button>\r\n            </List.Content>\r\n          </List.Item>\r\n        ))}\r\n      </List>\r\n\r\n      <Button onClick={deleteAllTasks} color=\"red\">Delete All Tasks</Button> {/* Delete all tasks button */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}